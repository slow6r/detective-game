import React, { useState, useEffect } from "react";
import { Input } from "../../../shared/ui/Input";
import { Button } from "../../../shared/ui/Button";
import styles from "./Form.module.css";
import downloadIcon from "../../../assets/download.svg";

export const Form = () => {
  const [code, setCode] = useState("");
  const [envelope4Unlocked, setEnvelope4Unlocked] = useState(() => {
    const savedState = localStorage.getItem("envelope4Unlocked");
    return savedState ? JSON.parse(savedState) : false;
  });
  const [showModal, setShowModal] = useState(false);
  const [showModal2, setShowModal2] = useState(false);
  const [pdfDownloaded, setPdfDownloaded] = useState(() => {
    const savedDownloadState = localStorage.getItem("pdfDownloaded");
    return savedDownloadState ? JSON.parse(savedDownloadState) : false;
  });
  const [code4, setCode4] = useState("");
  const [roseDownloaded, setRoseDownloaded] = useState(() => {
    const savedState = localStorage.getItem("roseDownloaded");
    return savedState ? JSON.parse(savedState) : false;
  });

  useEffect(() => {
    localStorage.setItem(
      "envelope4Unlocked",
      JSON.stringify(envelope4Unlocked)
    );
  }, [envelope4Unlocked]);

  useEffect(() => {
    localStorage.setItem("pdfDownloaded", JSON.stringify(pdfDownloaded));
  }, [pdfDownloaded]);

  useEffect(() => {
    localStorage.setItem("roseDownloaded", JSON.stringify(roseDownloaded));
  }, [roseDownloaded]);

  const handleEnvelope3Submit = () => {
    if (code === "—Ä–æ–∑–∞1942" || code === "–†–æ–∑–∞1942") {
      setShowModal(true);
    }
  };

  const downloadPdf = (e) => {
    e.stopPropagation();

    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    const link = document.createElement("a");
    link.href = "/TheLittlePrince.pdf";
    link.download = "TheLittlePrince.pdf";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    setPdfDownloaded(true);
  };

  const closeModal = () => {
    setShowModal(false);
    setEnvelope4Unlocked(true);
  };
  const closeModal2 = () => {
    setShowModal2(false);
    setEnvelope4Unlocked(true);
  };

  const downloadRose = (e) => {
    e.stopPropagation();

    const link = document.createElement("a");
    link.href = "/Rose.pdf";
    link.download = "Rose.pdf";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    setRoseDownloaded(true);
  };

  const handleEnvelope4Submit = () => {
    if (code4 === "1111") {
      setShowModal2(true);
    }
  };

  // const resetCache = () => {
  //   localStorage.removeItem("envelope4Unlocked");
  //   localStorage.removeItem("pdfDownloaded");
  //   localStorage.removeItem("roseDownloaded");
  //   setEnvelope4Unlocked(false);
  //   setPdfDownloaded(false);
  //   setRoseDownloaded(false);
  //   setCode("");
  //   setCode4("");
  // };

  return (
    <div className={styles.form}>
      <div className={styles.block}>
        <div className={styles.button__convert3} onClick={downloadPdf}>
          <Button onClick={handleEnvelope3Submit}>–ö–æ–Ω–≤–µ—Ä—Ç ‚Ññ2</Button>
          <img
            src={downloadIcon}
            alt="–°–∫–∞—á–∞—Ç—å PDF"
            title="–°–∫–∞—á–∞—Ç—å –∫–Ω–∏–≥—É"
            className={pdfDownloaded ? styles.downloadedIcon : ""}
          />
        </div>
        <div className={styles.button__convert3} onClick={downloadRose}>
          <Button onClick={handleEnvelope3Submit}>–ö–æ–Ω–≤–µ—Ä—Ç ‚Ññ3</Button>
          <img
            src={downloadIcon}
            alt="–°–∫–∞—á–∞—Ç—å PDF"
            title="–°–∫–∞—á–∞—Ç—å –∫–Ω–∏–≥—É"
            className={roseDownloaded ? styles.downloadedIcon : ""}
          />
        </div>
        <div className={styles.inputWrapper}>
          <Input
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ ‚Ññ1"
            value={code}
            onChange={(e) => setCode(e.target.value)}
          />
          <Button
            onClick={handleEnvelope3Submit}
            className={styles.submitButton}
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </Button>
        </div>
        {pdfDownloaded && (
          <div className={styles.hint}>
            –ö–Ω–∏–≥–∞ "–ú–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä–∏–Ω—Ü" —Å–∫–∞—á–∞–Ω–∞. –ù–∞–π–¥–∏—Ç–µ –≤ –Ω—ë–º –∫–æ–¥.
          </div>
        )}
        {roseDownloaded && (
          <div className={styles.hint}>
            –ö–Ω–∏–≥–∞ "–†–æ–∑–∞" —Å–∫–∞—á–∞–Ω–∞. –ù–∞–π–¥–∏—Ç–µ –≤ –Ω–µ–π –∫–æ–¥.
          </div>
        )}
      </div>
      <div
        className={`${styles.block} ${!envelope4Unlocked ? styles.locked : ""}`}
      >
        {/* <div className={styles.button__convert3} onClick={downloadRose}>
          <Button onClick={handleEnvelope4Submit}>–ö–æ–Ω–≤–µ—Ä—Ç ‚Ññ4</Button>
          <img
            src={downloadIcon}
            alt="–°–∫–∞—á–∞—Ç—å PDF"
            title="–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª"
            className={roseDownloaded ? styles.downloadedIcon : ""}
          />
        </div> */}
        <div className={styles.inputWrapper}>
          <Input
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ ‚Ññ2"
            value={code4}
            onChange={(e) => setCode4(e.target.value)}
            disabled={!envelope4Unlocked}
          />
          {!envelope4Unlocked && <div className={styles.lockIcon}>üîí</div>}
          <Button
            onClick={handleEnvelope4Submit}
            className={styles.submitButton}
            disabled={!envelope4Unlocked}
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </Button>
        </div>
        {roseDownloaded && (
          <div className={styles.hint}>
            –§–∞–π–ª "Rose" —Å–∫–∞—á–∞–Ω. –ù–∞–π–¥–∏—Ç–µ –≤ –Ω—ë–º –∫–æ–¥.
          </div>
        )}
      </div>

      {showModal && (
        <div className={styles.modalOverlay} onClick={closeModal}>
          <div className={styles.modal} onClick={(e) => e.stopPropagation()}>
            <p>
              –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –±—Ä–∞—Å–ª–µ—Ç –≥—Ä–∞—Ñ–∏–Ω–∏ –û—Ñ–µ–ª–∏–∏ –¥–µ –ú–æ—Ä–Ω—ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —É –≤–∞—Å.
              –£–∑–Ω–∞–π—Ç–µ –µ–≥–æ —Ç–∞–π–Ω—É...
              {"\n"}
              {"\n"}
              –ü—Ä–∏–≥–ª—è–¥–∏—Å—å –ø–æ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ: —á–∏—Å–ª–æ –±—É—Å–∏–Ω –∏ –∏—Ö —Ü–≤–µ—Ç–∞ - –Ω–µ—Å–ø—Ä–æ—Å—Ç–∞...
            </p>
            <Button onClick={closeModal}>–ó–∞–∫—Ä—ã—Ç—å</Button>
          </div>
        </div>
      )}
      {showModal2 && (
        <div className={styles.modalOverlay} onClick={closeModal}>
          <div className={styles.modal} onClick={(e) => e.stopPropagation()}>
            <p>–Ø —Ç–µ–±—è –ª—é–±–ª—é!</p>
            <Button onClick={closeModal2}>–ó–∞–∫—Ä—ã—Ç—å</Button>
          </div>
        </div>
      )}

      {/* <button className={styles.resetButton} onClick={resetCache}>
        –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
      </button> */}
    </div>
  );
};
